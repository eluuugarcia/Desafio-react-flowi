{"ast":null,"code":"import _defineProperty from \"/home/elu/trello-no-trello/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/elu/trello-no-trello/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/elu/trello-no-trello/src/Componentes/Tablero.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, useState } from \"react\";\nimport Seccion from \"./Seccion\";\nimport NewTareaForm from \"./NewTareaForm\";\n\nconst Tablero = props => {\n  const _useState = useState([{\n    id: 1,\n    name: \"Hacer el cuestionario de IOP\",\n    desc: \"Idiota tenias que hacerlo antes\"\n  }, {\n    id: 2,\n    name: \"Terminar la serie de Tevez\",\n    desc: \"no es tan importante\"\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        tareasToDo = _useState2[0],\n        setTareasToDo = _useState2[1];\n\n  const _useState3 = useState([{\n    id: 3,\n    name: \"Haciendo el desafio\",\n    desc: \"...\"\n  }, {\n    id: 4,\n    name: \"Trabajar\",\n    desc: \"...\"\n  }]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        tareasDoing = _useState4[0],\n        setTareasDoing = _useState4[1];\n\n  const _useState5 = useState([{\n    id: 5,\n    name: \"Ir al neurologo\",\n    desc: \"soy una vieja de 80\"\n  }, {\n    id: 6,\n    name: \"Ir al orl\",\n    desc: \"soy una vieja de 80 parte II\"\n  }]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        tareasFinished = _useState6[0],\n        setTareasFinished = _useState6[1];\n\n  const _useState7 = useState({\n    name: \"\",\n    desc: \"\"\n  }),\n        _useState8 = _slicedToArray(_useState7, 2),\n        form = _useState8[0],\n        setForm = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        selectedTarea = _useState10[0],\n        setSelectedTarea = _useState10[1];\n\n  const handleChange = e => {\n    this.setState({\n      form: _objectSpread({}, this.state.form, {\n        [e.target.name]: e.target.value\n      })\n    });\n  };\n\n  const selectTarea = (selectedTarea, type) => {\n    selectedTarea.type = type;\n    this.setState({\n      selectedTarea,\n      form: {\n        name: selectedTarea.name,\n        desc: selectedTarea.desc\n      }\n    });\n  };\n\n  const unSelectTarea = () => {\n    this.setState({\n      selectedTarea: null,\n      form: {\n        name: \"\",\n        desc: \"\"\n      }\n    });\n  };\n\n  const goToDoing = (tareas, tarea, type) => {\n    this.eliminarTarea(tareas, tarea, type);\n    this.state.tareasDoing.push(tarea);\n    this.setState({\n      tareasDoing: this.state.tareasDoing,\n      tarea\n    });\n  };\n\n  const goToToDo = (tareas, tarea, type) => {\n    this.eliminarTarea(tareas, tarea, type);\n    this.state.tareasToDo.push(tarea);\n    this.setState({\n      tareasToDo: this.state.tareasToDo,\n      tarea\n    });\n  };\n\n  const goToFinished = (tareas, tarea, type) => {\n    this.eliminarTarea(tareas, tarea, type);\n    this.state.tareasFinished.push(tarea);\n    this.setState({\n      tareasFinished: this.state.tareasFinished,\n      tarea\n    });\n  };\n\n  const eliminarTarea = (tareas, tarea, type) => {\n    let index = tareas.indexOf(tarea);\n    tareas.splice(index, 1);\n\n    switch (type) {\n      case 1:\n        this.setState({\n          tareasToDo: tareas\n        });\n        break;\n\n      case 2:\n        this.setState({\n          tareasDoing: tareas\n        });\n        break;\n\n      case 3:\n        this.setState({\n          tareasFinished: tareas\n        });\n        break;\n\n      default:\n        return null;\n    }\n  };\n\n  const editTarea = () => {};\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let newTarea = {\n      name: this.state.form.name,\n      desc: this.state.form.desc\n    };\n\n    if (this.state.selectedTarea) {\n      newTarea.id = this.state.selectedTarea.id;\n\n      switch (this.state.selectedTarea.type) {\n        case 1:\n          this.eliminarTarea(this.state.tareasToDo, this.state.selectedTarea, this.state.selectedTarea.type);\n          this.state.tareasToDo.push(newTarea);\n          break;\n\n        case 2:\n          this.eliminarTarea(this.state.tareasDoing, this.state.selectedTarea, this.state.selectedTarea.type);\n          this.state.tareasDoing.push(newTarea);\n          break;\n\n        case 3:\n          this.eliminarTarea(this.state.tareasFinished, this.state.selectedTarea, this.state.selectedTarea.type);\n          this.state.tareasFinished.push(newTarea);\n          break;\n\n        default:\n          break;\n      }\n    } else {\n      newTarea.id = this.state.tareasDoing.length + this.state.tareasToDo.length + this.state.tareasFinished.length + 1;\n      this.state.tareasToDo.push(newTarea);\n    }\n\n    this.setState({\n      tareasToDo: this.state.tareasToDo,\n      form: {\n        name: \"\",\n        desc: \"\"\n      },\n      selectedTarea: null\n    });\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      \"background-color\": \"#d1d1d1\",\n      padding: \"20px 10px 20px 20px\",\n      \"justify-content\": \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, selectedTarea ? React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, \"Modific\\xE1 la tarea:\") : React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, \"Agreg\\xE1 una nueva tarea:\"), React.createElement(NewTareaForm, {\n    formValues: form,\n    onChange: handleChange,\n    onSubmit: handleSubmit,\n    selectedTarea: selectedTarea,\n    unSelectTarea: unSelectTarea,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      \"margin-top\": \"40px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      \"margin-right\": \"50px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(Seccion, {\n    title: \"To do\",\n    tareas: this.state.tareasToDo,\n    color: \"#5191fd\",\n    type: 1,\n    goToDoing: this.goToDoing,\n    goToToDo: this.goToToDo,\n    goToFinished: this.goToFinished,\n    eliminarTarea: this.eliminarTarea,\n    selectTarea: this.selectTarea,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      \"margin-right\": \"50px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, React.createElement(Seccion, {\n    title: \"Doing\",\n    tareas: this.state.tareasDoing,\n    color: \"#e68a97\",\n    type: 2,\n    goToDoing: this.goToDoing,\n    goToToDo: this.goToToDo,\n    goToFinished: this.goToFinished,\n    eliminarTarea: this.eliminarTarea,\n    selectTarea: this.selectTarea,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      \"margin-right\": \"50px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(Seccion, {\n    title: \"Finished\",\n    tareas: this.state.tareasFinished,\n    color: \"#66a853\",\n    type: 3,\n    goToDoing: this.goToDoing,\n    goToToDo: this.goToToDo,\n    goToFinished: this.goToFinished,\n    eliminarTarea: this.eliminarTarea,\n    selectTarea: this.selectTarea,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }))));\n};\n\nexport default Tablero; // export default class Tablero extends Component {\n//   state = {\n//     tareasToDo: [\n//       {\n//         id: 1,\n//         name: \"Hacer el cuestionario de IOP\",\n//         desc: \"Idiota tenias que hacerlo antes\"\n//       },\n//       {\n//         id: 2,\n//         name: \"Terminar la serie de Tevez\",\n//         desc: \"no es tan importante\"\n//       }\n//     ],\n//     tareasDoing: [\n//       {\n//         id: 3,\n//         name: \"Haciendo el desafio\",\n//         desc: \"...\"\n//       },\n//       {\n//         id: 4,\n//         name: \"Trabajar\",\n//         desc: \"...\"\n//       }\n//     ],\n//     tareasFinished: [\n//       {\n//         id: 5,\n//         name: \"Ir al neurologo\",\n//         desc: \"soy una vieja de 80\"\n//       },\n//       {\n//         id: 6,\n//         name: \"Ir al orl\",\n//         desc: \"soy una vieja de 80 parte II\"\n//       }\n//     ],\n//     form: {\n//       name: \"\",\n//       desc: \"\"\n//     },\n//     selectedTarea: null\n//   };\n//   handleChange = e => {\n//     this.setState({\n//       form: {\n//         ...this.state.form,\n//         [e.target.name]: e.target.value\n//       }\n//     });\n//   };\n//   selectTarea = (selectedTarea, type) => {\n//     selectedTarea.type = type;\n//     this.setState({\n//       selectedTarea,\n//       form: {\n//         name: selectedTarea.name,\n//         desc: selectedTarea.desc\n//       }\n//     });\n//   };\n//   unSelectTarea = () => {\n//     this.setState({\n//       selectedTarea: null,\n//       form: {\n//         name: \"\",\n//         desc: \"\"\n//       }\n//     });\n//   };\n//   goToDoing = (tareas, tarea, type) => {\n//     this.eliminarTarea(tareas, tarea, type);\n//     this.state.tareasDoing.push(tarea);\n//     this.setState({\n//       tareasDoing: this.state.tareasDoing,\n//       tarea\n//     });\n//   };\n//   goToToDo = (tareas, tarea, type) => {\n//     this.eliminarTarea(tareas, tarea, type);\n//     this.state.tareasToDo.push(tarea);\n//     this.setState({\n//       tareasToDo: this.state.tareasToDo,\n//       tarea\n//     });\n//   };\n//   goToFinished = (tareas, tarea, type) => {\n//     this.eliminarTarea(tareas, tarea, type);\n//     this.state.tareasFinished.push(tarea);\n//     this.setState({\n//       tareasFinished: this.state.tareasFinished,\n//       tarea\n//     });\n//   };\n//   eliminarTarea = (tareas, tarea, type) => {\n//     let index = tareas.indexOf(tarea);\n//     tareas.splice(index, 1);\n//     switch (type) {\n//       case 1:\n//         this.setState({\n//           tareasToDo: tareas\n//         });\n//         break;\n//       case 2:\n//         this.setState({\n//           tareasDoing: tareas\n//         });\n//         break;\n//       case 3:\n//         this.setState({\n//           tareasFinished: tareas\n//         });\n//         break;\n//       default:\n//         return null;\n//     }\n//   };\n//   editTarea = () => {};\n//   handleSubmit = async e => {\n//     e.preventDefault();\n//     let newTarea = {\n//       name: this.state.form.name,\n//       desc: this.state.form.desc\n//     };\n//     if (this.state.selectedTarea) {\n//       newTarea.id = this.state.selectedTarea.id;\n//       switch (this.state.selectedTarea.type) {\n//         case 1:\n//           this.eliminarTarea(\n//             this.state.tareasToDo,\n//             this.state.selectedTarea,\n//             this.state.selectedTarea.type\n//           );\n//           this.state.tareasToDo.push(newTarea);\n//           break;\n//         case 2:\n//           this.eliminarTarea(\n//             this.state.tareasDoing,\n//             this.state.selectedTarea,\n//             this.state.selectedTarea.type\n//           );\n//           this.state.tareasDoing.push(newTarea);\n//           break;\n//         case 3:\n//           this.eliminarTarea(\n//             this.state.tareasFinished,\n//             this.state.selectedTarea,\n//             this.state.selectedTarea.type\n//           );\n//           this.state.tareasFinished.push(newTarea);\n//           break;\n//         default:\n//           break;\n//       }\n//     } else {\n//       newTarea.id =\n//         this.state.tareasDoing.length +\n//         this.state.tareasToDo.length +\n//         this.state.tareasFinished.length +\n//         1;\n//       this.state.tareasToDo.push(newTarea);\n//     }\n//     this.setState({\n//       tareasToDo: this.state.tareasToDo,\n//       form: {\n//         name: \"\",\n//         desc: \"\"\n//       },\n//       selectedTarea: null\n//     });\n//   };\n//   render() {\n//     return (\n//       <div\n//         style={{\n//           \"background-color\": \"#d1d1d1\",\n//           padding: \"20px 10px 20px 20px\",\n//           \"justify-content\": \"center\"\n//         }}\n//       >\n//         {this.state.selectedTarea ? (\n//           <h4>Modificá la tarea:</h4>\n//         ) : (\n//           <h4>Agregá una nueva tarea:</h4>\n//         )}\n//         <NewTareaForm\n//           formValues={this.state.form}\n//           onChange={this.handleChange}\n//           onSubmit={this.handleSubmit}\n//           selectedTarea={this.state.selectedTarea}\n//           unSelectTarea={this.unSelectTarea}\n//         />\n//         <div\n//           style={{\n//             display: \"flex\",\n//             \"margin-top\": \"40px\"\n//           }}\n//         >\n//           <div style={{ \"margin-right\": \"50px\" }}>\n//             <Seccion\n//               title=\"To do\"\n//               tareas={this.state.tareasToDo}\n//               color=\"#5191fd\"\n//               type={1}\n//               goToDoing={this.goToDoing}\n//               goToToDo={this.goToToDo}\n//               goToFinished={this.goToFinished}\n//               eliminarTarea={this.eliminarTarea}\n//               selectTarea={this.selectTarea}\n//             />\n//           </div>\n//           <div style={{ \"margin-right\": \"50px\" }}>\n//             <Seccion\n//               title=\"Doing\"\n//               tareas={this.state.tareasDoing}\n//               color=\"#e68a97\"\n//               type={2}\n//               goToDoing={this.goToDoing}\n//               goToToDo={this.goToToDo}\n//               goToFinished={this.goToFinished}\n//               eliminarTarea={this.eliminarTarea}\n//               selectTarea={this.selectTarea}\n//             />\n//           </div>\n//           <div style={{ \"margin-right\": \"50px\" }}>\n//             <Seccion\n//               title=\"Finished\"\n//               tareas={this.state.tareasFinished}\n//               color=\"#66a853\"\n//               type={3}\n//               goToDoing={this.goToDoing}\n//               goToToDo={this.goToToDo}\n//               goToFinished={this.goToFinished}\n//               eliminarTarea={this.eliminarTarea}\n//               selectTarea={this.selectTarea}\n//             />\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }","map":{"version":3,"sources":["/home/elu/trello-no-trello/src/Componentes/Tablero.js"],"names":["React","Component","useState","Seccion","NewTareaForm","Tablero","props","id","name","desc","tareasToDo","setTareasToDo","tareasDoing","setTareasDoing","tareasFinished","setTareasFinished","form","setForm","selectedTarea","setSelectedTarea","handleChange","e","setState","state","target","value","selectTarea","type","unSelectTarea","goToDoing","tareas","tarea","eliminarTarea","push","goToToDo","goToFinished","index","indexOf","splice","editTarea","handleSubmit","preventDefault","newTarea","length","padding","display"],"mappings":"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":["import React, { Component, useState } from \"react\";\nimport Seccion from \"./Seccion\";\nimport NewTareaForm from \"./NewTareaForm\";\n\nconst Tablero = props => {\n  const [tareasToDo, setTareasToDo] = useState([\n    {\n      id: 1,\n      name: \"Hacer el cuestionario de IOP\",\n      desc: \"Idiota tenias que hacerlo antes\"\n    },\n    {\n      id: 2,\n      name: \"Terminar la serie de Tevez\",\n      desc: \"no es tan importante\"\n    }\n  ]);\n\n  const [tareasDoing, setTareasDoing] = useState([\n    {\n      id: 3,\n      name: \"Haciendo el desafio\",\n      desc: \"...\"\n    },\n    {\n      id: 4,\n      name: \"Trabajar\",\n      desc: \"...\"\n    }\n  ]);\n\n  const [tareasFinished, setTareasFinished] = useState([\n    {\n      id: 5,\n      name: \"Ir al neurologo\",\n      desc: \"soy una vieja de 80\"\n    },\n    {\n      id: 6,\n      name: \"Ir al orl\",\n      desc: \"soy una vieja de 80 parte II\"\n    }\n  ]);\n\n  const [form, setForm] = useState({ name: \"\", desc: \"\" });\n\n  const [selectedTarea, setSelectedTarea] = useState(null);\n\n  const handleChange = e => {\n    this.setState({\n      form: {\n        ...this.state.form,\n        [e.target.name]: e.target.value\n      }\n    });\n  };\n\n  const selectTarea = (selectedTarea, type) => {\n    selectedTarea.type = type;\n    this.setState({\n      selectedTarea,\n      form: {\n        name: selectedTarea.name,\n        desc: selectedTarea.desc\n      }\n    });\n  };\n\n  const unSelectTarea = () => {\n    this.setState({\n      selectedTarea: null,\n      form: {\n        name: \"\",\n        desc: \"\"\n      }\n    });\n  };\n\n  const goToDoing = (tareas, tarea, type) => {\n    this.eliminarTarea(tareas, tarea, type);\n    this.state.tareasDoing.push(tarea);\n    this.setState({\n      tareasDoing: this.state.tareasDoing,\n      tarea\n    });\n  };\n\n  const goToToDo = (tareas, tarea, type) => {\n    this.eliminarTarea(tareas, tarea, type);\n    this.state.tareasToDo.push(tarea);\n    this.setState({\n      tareasToDo: this.state.tareasToDo,\n      tarea\n    });\n  };\n\n  const goToFinished = (tareas, tarea, type) => {\n    this.eliminarTarea(tareas, tarea, type);\n    this.state.tareasFinished.push(tarea);\n    this.setState({\n      tareasFinished: this.state.tareasFinished,\n      tarea\n    });\n  };\n\n  const eliminarTarea = (tareas, tarea, type) => {\n    let index = tareas.indexOf(tarea);\n    tareas.splice(index, 1);\n    switch (type) {\n      case 1:\n        this.setState({\n          tareasToDo: tareas\n        });\n        break;\n      case 2:\n        this.setState({\n          tareasDoing: tareas\n        });\n        break;\n      case 3:\n        this.setState({\n          tareasFinished: tareas\n        });\n        break;\n      default:\n        return null;\n    }\n  };\n\n  const editTarea = () => {};\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let newTarea = {\n      name: this.state.form.name,\n      desc: this.state.form.desc\n    };\n    if (this.state.selectedTarea) {\n      newTarea.id = this.state.selectedTarea.id;\n      switch (this.state.selectedTarea.type) {\n        case 1:\n          this.eliminarTarea(\n            this.state.tareasToDo,\n            this.state.selectedTarea,\n            this.state.selectedTarea.type\n          );\n          this.state.tareasToDo.push(newTarea);\n          break;\n        case 2:\n          this.eliminarTarea(\n            this.state.tareasDoing,\n            this.state.selectedTarea,\n            this.state.selectedTarea.type\n          );\n          this.state.tareasDoing.push(newTarea);\n          break;\n        case 3:\n          this.eliminarTarea(\n            this.state.tareasFinished,\n            this.state.selectedTarea,\n            this.state.selectedTarea.type\n          );\n          this.state.tareasFinished.push(newTarea);\n          break;\n        default:\n          break;\n      }\n    } else {\n      newTarea.id =\n        this.state.tareasDoing.length +\n        this.state.tareasToDo.length +\n        this.state.tareasFinished.length +\n        1;\n      this.state.tareasToDo.push(newTarea);\n    }\n\n    this.setState({\n      tareasToDo: this.state.tareasToDo,\n      form: {\n        name: \"\",\n        desc: \"\"\n      },\n      selectedTarea: null\n    });\n  };\n\n  return (\n    <div\n      style={{\n        \"background-color\": \"#d1d1d1\",\n        padding: \"20px 10px 20px 20px\",\n        \"justify-content\": \"center\"\n      }}\n    >\n      {selectedTarea ? (\n        <h4>Modificá la tarea:</h4>\n      ) : (\n        <h4>Agregá una nueva tarea:</h4>\n      )}\n\n      <NewTareaForm\n        formValues={form}\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n        selectedTarea={selectedTarea}\n        unSelectTarea={unSelectTarea}\n      />\n\n      <div\n        style={{\n          display: \"flex\",\n          \"margin-top\": \"40px\"\n        }}\n      >\n        <div style={{ \"margin-right\": \"50px\" }}>\n          <Seccion\n            title=\"To do\"\n            tareas={this.state.tareasToDo}\n            color=\"#5191fd\"\n            type={1}\n            goToDoing={this.goToDoing}\n            goToToDo={this.goToToDo}\n            goToFinished={this.goToFinished}\n            eliminarTarea={this.eliminarTarea}\n            selectTarea={this.selectTarea}\n          />\n        </div>\n        <div style={{ \"margin-right\": \"50px\" }}>\n          <Seccion\n            title=\"Doing\"\n            tareas={this.state.tareasDoing}\n            color=\"#e68a97\"\n            type={2}\n            goToDoing={this.goToDoing}\n            goToToDo={this.goToToDo}\n            goToFinished={this.goToFinished}\n            eliminarTarea={this.eliminarTarea}\n            selectTarea={this.selectTarea}\n          />\n        </div>\n        <div style={{ \"margin-right\": \"50px\" }}>\n          <Seccion\n            title=\"Finished\"\n            tareas={this.state.tareasFinished}\n            color=\"#66a853\"\n            type={3}\n            goToDoing={this.goToDoing}\n            goToToDo={this.goToToDo}\n            goToFinished={this.goToFinished}\n            eliminarTarea={this.eliminarTarea}\n            selectTarea={this.selectTarea}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Tablero;\n\n// export default class Tablero extends Component {\n//   state = {\n//     tareasToDo: [\n//       {\n//         id: 1,\n//         name: \"Hacer el cuestionario de IOP\",\n//         desc: \"Idiota tenias que hacerlo antes\"\n//       },\n//       {\n//         id: 2,\n//         name: \"Terminar la serie de Tevez\",\n//         desc: \"no es tan importante\"\n//       }\n//     ],\n//     tareasDoing: [\n//       {\n//         id: 3,\n//         name: \"Haciendo el desafio\",\n//         desc: \"...\"\n//       },\n//       {\n//         id: 4,\n//         name: \"Trabajar\",\n//         desc: \"...\"\n//       }\n//     ],\n//     tareasFinished: [\n//       {\n//         id: 5,\n//         name: \"Ir al neurologo\",\n//         desc: \"soy una vieja de 80\"\n//       },\n//       {\n//         id: 6,\n//         name: \"Ir al orl\",\n//         desc: \"soy una vieja de 80 parte II\"\n//       }\n//     ],\n//     form: {\n//       name: \"\",\n//       desc: \"\"\n//     },\n//     selectedTarea: null\n//   };\n\n//   handleChange = e => {\n//     this.setState({\n//       form: {\n//         ...this.state.form,\n//         [e.target.name]: e.target.value\n//       }\n//     });\n//   };\n\n//   selectTarea = (selectedTarea, type) => {\n//     selectedTarea.type = type;\n//     this.setState({\n//       selectedTarea,\n//       form: {\n//         name: selectedTarea.name,\n//         desc: selectedTarea.desc\n//       }\n//     });\n//   };\n\n//   unSelectTarea = () => {\n//     this.setState({\n//       selectedTarea: null,\n//       form: {\n//         name: \"\",\n//         desc: \"\"\n//       }\n//     });\n//   };\n\n//   goToDoing = (tareas, tarea, type) => {\n//     this.eliminarTarea(tareas, tarea, type);\n//     this.state.tareasDoing.push(tarea);\n//     this.setState({\n//       tareasDoing: this.state.tareasDoing,\n//       tarea\n//     });\n//   };\n\n//   goToToDo = (tareas, tarea, type) => {\n//     this.eliminarTarea(tareas, tarea, type);\n//     this.state.tareasToDo.push(tarea);\n//     this.setState({\n//       tareasToDo: this.state.tareasToDo,\n//       tarea\n//     });\n//   };\n\n//   goToFinished = (tareas, tarea, type) => {\n//     this.eliminarTarea(tareas, tarea, type);\n//     this.state.tareasFinished.push(tarea);\n//     this.setState({\n//       tareasFinished: this.state.tareasFinished,\n//       tarea\n//     });\n//   };\n\n//   eliminarTarea = (tareas, tarea, type) => {\n//     let index = tareas.indexOf(tarea);\n//     tareas.splice(index, 1);\n//     switch (type) {\n//       case 1:\n//         this.setState({\n//           tareasToDo: tareas\n//         });\n//         break;\n//       case 2:\n//         this.setState({\n//           tareasDoing: tareas\n//         });\n//         break;\n//       case 3:\n//         this.setState({\n//           tareasFinished: tareas\n//         });\n//         break;\n//       default:\n//         return null;\n//     }\n//   };\n\n//   editTarea = () => {};\n\n//   handleSubmit = async e => {\n//     e.preventDefault();\n//     let newTarea = {\n//       name: this.state.form.name,\n//       desc: this.state.form.desc\n//     };\n//     if (this.state.selectedTarea) {\n//       newTarea.id = this.state.selectedTarea.id;\n//       switch (this.state.selectedTarea.type) {\n//         case 1:\n//           this.eliminarTarea(\n//             this.state.tareasToDo,\n//             this.state.selectedTarea,\n//             this.state.selectedTarea.type\n//           );\n//           this.state.tareasToDo.push(newTarea);\n//           break;\n//         case 2:\n//           this.eliminarTarea(\n//             this.state.tareasDoing,\n//             this.state.selectedTarea,\n//             this.state.selectedTarea.type\n//           );\n//           this.state.tareasDoing.push(newTarea);\n//           break;\n//         case 3:\n//           this.eliminarTarea(\n//             this.state.tareasFinished,\n//             this.state.selectedTarea,\n//             this.state.selectedTarea.type\n//           );\n//           this.state.tareasFinished.push(newTarea);\n//           break;\n//         default:\n//           break;\n//       }\n//     } else {\n//       newTarea.id =\n//         this.state.tareasDoing.length +\n//         this.state.tareasToDo.length +\n//         this.state.tareasFinished.length +\n//         1;\n//       this.state.tareasToDo.push(newTarea);\n//     }\n\n//     this.setState({\n//       tareasToDo: this.state.tareasToDo,\n//       form: {\n//         name: \"\",\n//         desc: \"\"\n//       },\n//       selectedTarea: null\n//     });\n//   };\n\n//   render() {\n//     return (\n//       <div\n//         style={{\n//           \"background-color\": \"#d1d1d1\",\n//           padding: \"20px 10px 20px 20px\",\n//           \"justify-content\": \"center\"\n//         }}\n//       >\n//         {this.state.selectedTarea ? (\n//           <h4>Modificá la tarea:</h4>\n//         ) : (\n//           <h4>Agregá una nueva tarea:</h4>\n//         )}\n\n//         <NewTareaForm\n//           formValues={this.state.form}\n//           onChange={this.handleChange}\n//           onSubmit={this.handleSubmit}\n//           selectedTarea={this.state.selectedTarea}\n//           unSelectTarea={this.unSelectTarea}\n//         />\n\n//         <div\n//           style={{\n//             display: \"flex\",\n//             \"margin-top\": \"40px\"\n//           }}\n//         >\n//           <div style={{ \"margin-right\": \"50px\" }}>\n//             <Seccion\n//               title=\"To do\"\n//               tareas={this.state.tareasToDo}\n//               color=\"#5191fd\"\n//               type={1}\n//               goToDoing={this.goToDoing}\n//               goToToDo={this.goToToDo}\n//               goToFinished={this.goToFinished}\n//               eliminarTarea={this.eliminarTarea}\n//               selectTarea={this.selectTarea}\n//             />\n//           </div>\n//           <div style={{ \"margin-right\": \"50px\" }}>\n//             <Seccion\n//               title=\"Doing\"\n//               tareas={this.state.tareasDoing}\n//               color=\"#e68a97\"\n//               type={2}\n//               goToDoing={this.goToDoing}\n//               goToToDo={this.goToToDo}\n//               goToFinished={this.goToFinished}\n//               eliminarTarea={this.eliminarTarea}\n//               selectTarea={this.selectTarea}\n//             />\n//           </div>\n//           <div style={{ \"margin-right\": \"50px\" }}>\n//             <Seccion\n//               title=\"Finished\"\n//               tareas={this.state.tareasFinished}\n//               color=\"#66a853\"\n//               type={3}\n//               goToDoing={this.goToDoing}\n//               goToToDo={this.goToToDo}\n//               goToFinished={this.goToFinished}\n//               eliminarTarea={this.eliminarTarea}\n//               selectTarea={this.selectTarea}\n//             />\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}