{"ast":null,"code":"import _defineProperty from \"/home/elu/trello-no-trello/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/elu/trello-no-trello/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/elu/trello-no-trello/src/Componentes/Tablero.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, useState } from \"react\";\nimport Seccion from \"./Seccion\";\nimport NewTareaForm from \"./NewTareaForm\";\n\nconst Tablero = props => {\n  const _useState = useState([{\n    id: 1,\n    name: \"Hacer el cuestionario de IOP\",\n    desc: \"Idiota tenias que hacerlo antes\"\n  }, {\n    id: 2,\n    name: \"Terminar la serie de Tevez\",\n    desc: \"no es tan importante\"\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        tareasToDo = _useState2[0],\n        setTareasToDo = _useState2[1];\n\n  const _useState3 = useState([{\n    id: 3,\n    name: \"Haciendo el desafio\",\n    desc: \"...\"\n  }, {\n    id: 4,\n    name: \"Trabajar\",\n    desc: \"...\"\n  }]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        tareasDoing = _useState4[0],\n        setTareasDoing = _useState4[1];\n\n  const _useState5 = useState([{\n    id: 5,\n    name: \"Ir al neurologo\",\n    desc: \"soy una vieja de 80\"\n  }, {\n    id: 6,\n    name: \"Ir al orl\",\n    desc: \"soy una vieja de 80 parte II\"\n  }]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        tareasFinished = _useState6[0],\n        setTareasFinished = _useState6[1];\n\n  const _useState7 = useState({\n    name: \"\",\n    desc: \"\"\n  }),\n        _useState8 = _slicedToArray(_useState7, 2),\n        form = _useState8[0],\n        setForm = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        selectedTarea = _useState10[0],\n        setSelectedTarea = _useState10[1];\n\n  const handleChange = e => {\n    setForm(_objectSpread({}, form, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const selectTarea = (selectedTarea, type) => {\n    selectedTarea.type = type;\n    setSelectedTarea(selectedTarea);\n    setForm({\n      name: selectedTarea.name,\n      desc: selectedTarea.desc\n    });\n  };\n\n  const unSelectTarea = () => {\n    setSelectedTarea(null);\n    setForm({\n      name: \"\",\n      desc: \"\"\n    });\n  };\n\n  const goToDoing = (tareas, tarea, type) => {\n    eliminarTarea(tareas, tarea, type);\n    tareasDoing.push(tarea);\n    setTareasDoing({\n      tareasDoing,\n      tarea\n    });\n  };\n\n  const goToToDo = (tareas, tarea, type) => {\n    eliminarTarea(tareas, tarea, type);\n    tareasToDo.push(tarea);\n    this.setTareasToDo(tareasToDo, tarea);\n  };\n\n  const goToFinished = (tareas, tarea, type) => {\n    eliminarTarea(tareas, tarea, type);\n    tareasFinished.push(tarea);\n    this.setState({\n      tareasFinished: this.state.tareasFinished,\n      tarea\n    });\n  };\n\n  const eliminarTarea = (tareas, tarea, type) => {\n    let index = tareas.indexOf(tarea);\n    tareas.splice(index, 1);\n\n    switch (type) {\n      case 1:\n        this.setState({\n          tareasToDo: tareas\n        });\n        break;\n\n      case 2:\n        this.setState({\n          tareasDoing: tareas\n        });\n        break;\n\n      case 3:\n        this.setState({\n          tareasFinished: tareas\n        });\n        break;\n\n      default:\n        return null;\n    }\n  };\n\n  const editTarea = () => {};\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let newTarea = {\n      name: form.name,\n      desc: form.desc\n    };\n\n    if (selectedTarea) {\n      newTarea.id = selectedTarea.id;\n\n      switch (selectedTarea.type) {\n        case 1:\n          eliminarTarea(tareasToDo, selectedTarea, selectedTarea.type);\n          tareasToDo.push(newTarea);\n          break;\n\n        case 2:\n          this.eliminarTarea(tareasDoing, selectedTarea, selectedTarea.type);\n          tareasDoing.push(newTarea);\n          break;\n\n        case 3:\n          this.eliminarTarea(tareasFinished, selectedTarea, selectedTarea.type);\n          tareasFinished.push(newTarea);\n          break;\n\n        default:\n          break;\n      }\n    } else {\n      newTarea.id = tareasDoing.length + tareasToDo.length + tareasFinished.length + 1;\n      tareasToDo.push(newTarea);\n    }\n\n    setTareasToDo(tareasToDo);\n    setForm({\n      name: \"\",\n      desc: \"\"\n    });\n    setSelectedTarea(null);\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      \"background-color\": \"#d1d1d1\",\n      padding: \"20px 10px 20px 20px\",\n      \"justify-content\": \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, selectedTarea ? React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"Modific\\xE1 la tarea:\") : React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"Agreg\\xE1 una nueva tarea:\"), React.createElement(NewTareaForm, {\n    formValues: form,\n    onChange: handleChange,\n    onSubmit: handleSubmit,\n    selectedTarea: selectedTarea,\n    unSelectTarea: unSelectTarea,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      \"margin-top\": \"40px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      \"margin-right\": \"50px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(Seccion, {\n    title: \"To do\",\n    tareas: tareasToDo,\n    color: \"#5191fd\",\n    type: 1,\n    goToDoing: goToDoing,\n    goToToDo: goToToDo,\n    goToFinished: goToFinished,\n    eliminarTarea: eliminarTarea,\n    selectTarea: selectTarea,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      \"margin-right\": \"50px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(Seccion, {\n    title: \"Doing\",\n    tareas: tareasDoing,\n    color: \"#e68a97\",\n    type: 2,\n    goToDoing: goToDoing,\n    goToToDo: goToToDo,\n    goToFinished: goToFinished,\n    eliminarTarea: eliminarTarea,\n    selectTarea: selectTarea,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      \"margin-right\": \"50px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(Seccion, {\n    title: \"Finished\",\n    tareas: tareasFinished,\n    color: \"#66a853\",\n    type: 3,\n    goToDoing: goToDoing,\n    goToToDo: goToToDo,\n    goToFinished: goToFinished,\n    eliminarTarea: eliminarTarea,\n    selectTarea: selectTarea,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }))));\n};\n\nexport default Tablero; // export default class Tablero extends Component {\n//   state = {\n//     tareasToDo: [\n//       {\n//         id: 1,\n//         name: \"Hacer el cuestionario de IOP\",\n//         desc: \"Idiota tenias que hacerlo antes\"\n//       },\n//       {\n//         id: 2,\n//         name: \"Terminar la serie de Tevez\",\n//         desc: \"no es tan importante\"\n//       }\n//     ],\n//     tareasDoing: [\n//       {\n//         id: 3,\n//         name: \"Haciendo el desafio\",\n//         desc: \"...\"\n//       },\n//       {\n//         id: 4,\n//         name: \"Trabajar\",\n//         desc: \"...\"\n//       }\n//     ],\n//     tareasFinished: [\n//       {\n//         id: 5,\n//         name: \"Ir al neurologo\",\n//         desc: \"soy una vieja de 80\"\n//       },\n//       {\n//         id: 6,\n//         name: \"Ir al orl\",\n//         desc: \"soy una vieja de 80 parte II\"\n//       }\n//     ],\n//     form: {\n//       name: \"\",\n//       desc: \"\"\n//     },\n//     selectedTarea: null\n//   };\n//   handleChange = e => {\n//     this.setState({\n//       form: {\n//         ...this.state.form,\n//         [e.target.name]: e.target.value\n//       }\n//     });\n//   };\n//   selectTarea = (selectedTarea, type) => {\n//     selectedTarea.type = type;\n//     this.setState({\n//       selectedTarea,\n//       form: {\n//         name: selectedTarea.name,\n//         desc: selectedTarea.desc\n//       }\n//     });\n//   };\n//   unSelectTarea = () => {\n//     this.setState({\n//       selectedTarea: null,\n//       form: {\n//         name: \"\",\n//         desc: \"\"\n//       }\n//     });\n//   };\n//   goToDoing = (tareas, tarea, type) => {\n//     this.eliminarTarea(tareas, tarea, type);\n//     this.state.tareasDoing.push(tarea);\n//     this.setState({\n//       tareasDoing: this.state.tareasDoing,\n//       tarea\n//     });\n//   };\n//   goToToDo = (tareas, tarea, type) => {\n//     this.eliminarTarea(tareas, tarea, type);\n//     this.state.tareasToDo.push(tarea);\n//     this.setState({\n//       tareasToDo: this.state.tareasToDo,\n//       tarea\n//     });\n//   };\n//   goToFinished = (tareas, tarea, type) => {\n//     this.eliminarTarea(tareas, tarea, type);\n//     this.state.tareasFinished.push(tarea);\n//     this.setState({\n//       tareasFinished: this.state.tareasFinished,\n//       tarea\n//     });\n//   };\n//   eliminarTarea = (tareas, tarea, type) => {\n//     let index = tareas.indexOf(tarea);\n//     tareas.splice(index, 1);\n//     switch (type) {\n//       case 1:\n//         this.setState({\n//           tareasToDo: tareas\n//         });\n//         break;\n//       case 2:\n//         this.setState({\n//           tareasDoing: tareas\n//         });\n//         break;\n//       case 3:\n//         this.setState({\n//           tareasFinished: tareas\n//         });\n//         break;\n//       default:\n//         return null;\n//     }\n//   };\n//   editTarea = () => {};\n//   handleSubmit = async e => {\n//     e.preventDefault();\n//     let newTarea = {\n//       name: this.state.form.name,\n//       desc: this.state.form.desc\n//     };\n//     if (this.state.selectedTarea) {\n//       newTarea.id = this.state.selectedTarea.id;\n//       switch (this.state.selectedTarea.type) {\n//         case 1:\n//           this.eliminarTarea(\n//             this.state.tareasToDo,\n//             this.state.selectedTarea,\n//             this.state.selectedTarea.type\n//           );\n//           this.state.tareasToDo.push(newTarea);\n//           break;\n//         case 2:\n//           this.eliminarTarea(\n//             this.state.tareasDoing,\n//             this.state.selectedTarea,\n//             this.state.selectedTarea.type\n//           );\n//           this.state.tareasDoing.push(newTarea);\n//           break;\n//         case 3:\n//           this.eliminarTarea(\n//             this.state.tareasFinished,\n//             this.state.selectedTarea,\n//             this.state.selectedTarea.type\n//           );\n//           this.state.tareasFinished.push(newTarea);\n//           break;\n//         default:\n//           break;\n//       }\n//     } else {\n//       newTarea.id =\n//         this.state.tareasDoing.length +\n//         this.state.tareasToDo.length +\n//         this.state.tareasFinished.length +\n//         1;\n//       this.state.tareasToDo.push(newTarea);\n//     }\n//     this.setState({\n//       tareasToDo: this.state.tareasToDo,\n//       form: {\n//         name: \"\",\n//         desc: \"\"\n//       },\n//       selectedTarea: null\n//     });\n//   };\n//   render() {\n//     return (\n//       <div\n//         style={{\n//           \"background-color\": \"#d1d1d1\",\n//           padding: \"20px 10px 20px 20px\",\n//           \"justify-content\": \"center\"\n//         }}\n//       >\n//         {this.state.selectedTarea ? (\n//           <h4>Modificá la tarea:</h4>\n//         ) : (\n//           <h4>Agregá una nueva tarea:</h4>\n//         )}\n//         <NewTareaForm\n//           formValues={this.state.form}\n//           onChange={this.handleChange}\n//           onSubmit={this.handleSubmit}\n//           selectedTarea={this.state.selectedTarea}\n//           unSelectTarea={this.unSelectTarea}\n//         />\n//         <div\n//           style={{\n//             display: \"flex\",\n//             \"margin-top\": \"40px\"\n//           }}\n//         >\n//           <div style={{ \"margin-right\": \"50px\" }}>\n//             <Seccion\n//               title=\"To do\"\n//               tareas={this.state.tareasToDo}\n//               color=\"#5191fd\"\n//               type={1}\n//               goToDoing={this.goToDoing}\n//               goToToDo={this.goToToDo}\n//               goToFinished={this.goToFinished}\n//               eliminarTarea={this.eliminarTarea}\n//               selectTarea={this.selectTarea}\n//             />\n//           </div>\n//           <div style={{ \"margin-right\": \"50px\" }}>\n//             <Seccion\n//               title=\"Doing\"\n//               tareas={this.state.tareasDoing}\n//               color=\"#e68a97\"\n//               type={2}\n//               goToDoing={this.goToDoing}\n//               goToToDo={this.goToToDo}\n//               goToFinished={this.goToFinished}\n//               eliminarTarea={this.eliminarTarea}\n//               selectTarea={this.selectTarea}\n//             />\n//           </div>\n//           <div style={{ \"margin-right\": \"50px\" }}>\n//             <Seccion\n//               title=\"Finished\"\n//               tareas={this.state.tareasFinished}\n//               color=\"#66a853\"\n//               type={3}\n//               goToDoing={this.goToDoing}\n//               goToToDo={this.goToToDo}\n//               goToFinished={this.goToFinished}\n//               eliminarTarea={this.eliminarTarea}\n//               selectTarea={this.selectTarea}\n//             />\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }","map":{"version":3,"sources":["/home/elu/trello-no-trello/src/Componentes/Tablero.js"],"names":["React","Component","useState","Seccion","NewTareaForm","Tablero","props","id","name","desc","tareasToDo","setTareasToDo","tareasDoing","setTareasDoing","tareasFinished","setTareasFinished","form","setForm","selectedTarea","setSelectedTarea","handleChange","e","target","value","selectTarea","type","unSelectTarea","goToDoing","tareas","tarea","eliminarTarea","push","goToToDo","goToFinished","setState","state","index","indexOf","splice","editTarea","handleSubmit","preventDefault","newTarea","length","padding","display"],"mappings":"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":["import React, { Component, useState } from \"react\";\nimport Seccion from \"./Seccion\";\nimport NewTareaForm from \"./NewTareaForm\";\n\nconst Tablero = props => {\n  const [tareasToDo, setTareasToDo] = useState([\n    {\n      id: 1,\n      name: \"Hacer el cuestionario de IOP\",\n      desc: \"Idiota tenias que hacerlo antes\"\n    },\n    {\n      id: 2,\n      name: \"Terminar la serie de Tevez\",\n      desc: \"no es tan importante\"\n    }\n  ]);\n\n  const [tareasDoing, setTareasDoing] = useState([\n    {\n      id: 3,\n      name: \"Haciendo el desafio\",\n      desc: \"...\"\n    },\n    {\n      id: 4,\n      name: \"Trabajar\",\n      desc: \"...\"\n    }\n  ]);\n\n  const [tareasFinished, setTareasFinished] = useState([\n    {\n      id: 5,\n      name: \"Ir al neurologo\",\n      desc: \"soy una vieja de 80\"\n    },\n    {\n      id: 6,\n      name: \"Ir al orl\",\n      desc: \"soy una vieja de 80 parte II\"\n    }\n  ]);\n\n  const [form, setForm] = useState({ name: \"\", desc: \"\" });\n\n  const [selectedTarea, setSelectedTarea] = useState(null);\n\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const selectTarea = (selectedTarea, type) => {\n    selectedTarea.type = type;\n    setSelectedTarea(selectedTarea);\n    setForm({\n      name: selectedTarea.name,\n      desc: selectedTarea.desc\n    });\n  };\n\n  const unSelectTarea = () => {\n    setSelectedTarea(null);\n    setForm({\n      name: \"\",\n      desc: \"\"\n    });\n  };\n\n  const goToDoing = (tareas, tarea, type) => {\n    eliminarTarea(tareas, tarea, type);\n    tareasDoing.push(tarea);\n    setTareasDoing({\n      tareasDoing,\n      tarea\n    });\n  };\n\n  const goToToDo = (tareas, tarea, type) => {\n    eliminarTarea(tareas, tarea, type);\n    tareasToDo.push(tarea);\n    this.setTareasToDo(tareasToDo, tarea);\n  };\n\n  const goToFinished = (tareas, tarea, type) => {\n    eliminarTarea(tareas, tarea, type);\n    tareasFinished.push(tarea);\n    this.setState({\n      tareasFinished: this.state.tareasFinished,\n      tarea\n    });\n  };\n\n  const eliminarTarea = (tareas, tarea, type) => {\n    let index = tareas.indexOf(tarea);\n    tareas.splice(index, 1);\n    switch (type) {\n      case 1:\n        this.setState({\n          tareasToDo: tareas\n        });\n        break;\n      case 2:\n        this.setState({\n          tareasDoing: tareas\n        });\n        break;\n      case 3:\n        this.setState({\n          tareasFinished: tareas\n        });\n        break;\n      default:\n        return null;\n    }\n  };\n\n  const editTarea = () => {};\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let newTarea = {\n      name: form.name,\n      desc: form.desc\n    };\n    if (selectedTarea) {\n      newTarea.id = selectedTarea.id;\n      switch (selectedTarea.type) {\n        case 1:\n          eliminarTarea(tareasToDo, selectedTarea, selectedTarea.type);\n          tareasToDo.push(newTarea);\n          break;\n        case 2:\n          this.eliminarTarea(tareasDoing, selectedTarea, selectedTarea.type);\n          tareasDoing.push(newTarea);\n          break;\n        case 3:\n          this.eliminarTarea(tareasFinished, selectedTarea, selectedTarea.type);\n          tareasFinished.push(newTarea);\n          break;\n        default:\n          break;\n      }\n    } else {\n      newTarea.id =\n        tareasDoing.length + tareasToDo.length + tareasFinished.length + 1;\n      tareasToDo.push(newTarea);\n    }\n    setTareasToDo(tareasToDo);\n    setForm({\n      name: \"\",\n      desc: \"\"\n    });\n    setSelectedTarea(null);\n  };\n\n  return (\n    <div\n      style={{\n        \"background-color\": \"#d1d1d1\",\n        padding: \"20px 10px 20px 20px\",\n        \"justify-content\": \"center\"\n      }}\n    >\n      {selectedTarea ? (\n        <h4>Modificá la tarea:</h4>\n      ) : (\n        <h4>Agregá una nueva tarea:</h4>\n      )}\n\n      <NewTareaForm\n        formValues={form}\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n        selectedTarea={selectedTarea}\n        unSelectTarea={unSelectTarea}\n      />\n\n      <div\n        style={{\n          display: \"flex\",\n          \"margin-top\": \"40px\"\n        }}\n      >\n        <div style={{ \"margin-right\": \"50px\" }}>\n          <Seccion\n            title=\"To do\"\n            tareas={tareasToDo}\n            color=\"#5191fd\"\n            type={1}\n            goToDoing={goToDoing}\n            goToToDo={goToToDo}\n            goToFinished={goToFinished}\n            eliminarTarea={eliminarTarea}\n            selectTarea={selectTarea}\n          />\n        </div>\n        <div style={{ \"margin-right\": \"50px\" }}>\n          <Seccion\n            title=\"Doing\"\n            tareas={tareasDoing}\n            color=\"#e68a97\"\n            type={2}\n            goToDoing={goToDoing}\n            goToToDo={goToToDo}\n            goToFinished={goToFinished}\n            eliminarTarea={eliminarTarea}\n            selectTarea={selectTarea}\n          />\n        </div>\n        <div style={{ \"margin-right\": \"50px\" }}>\n          <Seccion\n            title=\"Finished\"\n            tareas={tareasFinished}\n            color=\"#66a853\"\n            type={3}\n            goToDoing={goToDoing}\n            goToToDo={goToToDo}\n            goToFinished={goToFinished}\n            eliminarTarea={eliminarTarea}\n            selectTarea={selectTarea}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Tablero;\n\n// export default class Tablero extends Component {\n//   state = {\n//     tareasToDo: [\n//       {\n//         id: 1,\n//         name: \"Hacer el cuestionario de IOP\",\n//         desc: \"Idiota tenias que hacerlo antes\"\n//       },\n//       {\n//         id: 2,\n//         name: \"Terminar la serie de Tevez\",\n//         desc: \"no es tan importante\"\n//       }\n//     ],\n//     tareasDoing: [\n//       {\n//         id: 3,\n//         name: \"Haciendo el desafio\",\n//         desc: \"...\"\n//       },\n//       {\n//         id: 4,\n//         name: \"Trabajar\",\n//         desc: \"...\"\n//       }\n//     ],\n//     tareasFinished: [\n//       {\n//         id: 5,\n//         name: \"Ir al neurologo\",\n//         desc: \"soy una vieja de 80\"\n//       },\n//       {\n//         id: 6,\n//         name: \"Ir al orl\",\n//         desc: \"soy una vieja de 80 parte II\"\n//       }\n//     ],\n//     form: {\n//       name: \"\",\n//       desc: \"\"\n//     },\n//     selectedTarea: null\n//   };\n\n//   handleChange = e => {\n//     this.setState({\n//       form: {\n//         ...this.state.form,\n//         [e.target.name]: e.target.value\n//       }\n//     });\n//   };\n\n//   selectTarea = (selectedTarea, type) => {\n//     selectedTarea.type = type;\n//     this.setState({\n//       selectedTarea,\n//       form: {\n//         name: selectedTarea.name,\n//         desc: selectedTarea.desc\n//       }\n//     });\n//   };\n\n//   unSelectTarea = () => {\n//     this.setState({\n//       selectedTarea: null,\n//       form: {\n//         name: \"\",\n//         desc: \"\"\n//       }\n//     });\n//   };\n\n//   goToDoing = (tareas, tarea, type) => {\n//     this.eliminarTarea(tareas, tarea, type);\n//     this.state.tareasDoing.push(tarea);\n//     this.setState({\n//       tareasDoing: this.state.tareasDoing,\n//       tarea\n//     });\n//   };\n\n//   goToToDo = (tareas, tarea, type) => {\n//     this.eliminarTarea(tareas, tarea, type);\n//     this.state.tareasToDo.push(tarea);\n//     this.setState({\n//       tareasToDo: this.state.tareasToDo,\n//       tarea\n//     });\n//   };\n\n//   goToFinished = (tareas, tarea, type) => {\n//     this.eliminarTarea(tareas, tarea, type);\n//     this.state.tareasFinished.push(tarea);\n//     this.setState({\n//       tareasFinished: this.state.tareasFinished,\n//       tarea\n//     });\n//   };\n\n//   eliminarTarea = (tareas, tarea, type) => {\n//     let index = tareas.indexOf(tarea);\n//     tareas.splice(index, 1);\n//     switch (type) {\n//       case 1:\n//         this.setState({\n//           tareasToDo: tareas\n//         });\n//         break;\n//       case 2:\n//         this.setState({\n//           tareasDoing: tareas\n//         });\n//         break;\n//       case 3:\n//         this.setState({\n//           tareasFinished: tareas\n//         });\n//         break;\n//       default:\n//         return null;\n//     }\n//   };\n\n//   editTarea = () => {};\n\n//   handleSubmit = async e => {\n//     e.preventDefault();\n//     let newTarea = {\n//       name: this.state.form.name,\n//       desc: this.state.form.desc\n//     };\n//     if (this.state.selectedTarea) {\n//       newTarea.id = this.state.selectedTarea.id;\n//       switch (this.state.selectedTarea.type) {\n//         case 1:\n//           this.eliminarTarea(\n//             this.state.tareasToDo,\n//             this.state.selectedTarea,\n//             this.state.selectedTarea.type\n//           );\n//           this.state.tareasToDo.push(newTarea);\n//           break;\n//         case 2:\n//           this.eliminarTarea(\n//             this.state.tareasDoing,\n//             this.state.selectedTarea,\n//             this.state.selectedTarea.type\n//           );\n//           this.state.tareasDoing.push(newTarea);\n//           break;\n//         case 3:\n//           this.eliminarTarea(\n//             this.state.tareasFinished,\n//             this.state.selectedTarea,\n//             this.state.selectedTarea.type\n//           );\n//           this.state.tareasFinished.push(newTarea);\n//           break;\n//         default:\n//           break;\n//       }\n//     } else {\n//       newTarea.id =\n//         this.state.tareasDoing.length +\n//         this.state.tareasToDo.length +\n//         this.state.tareasFinished.length +\n//         1;\n//       this.state.tareasToDo.push(newTarea);\n//     }\n\n//     this.setState({\n//       tareasToDo: this.state.tareasToDo,\n//       form: {\n//         name: \"\",\n//         desc: \"\"\n//       },\n//       selectedTarea: null\n//     });\n//   };\n\n//   render() {\n//     return (\n//       <div\n//         style={{\n//           \"background-color\": \"#d1d1d1\",\n//           padding: \"20px 10px 20px 20px\",\n//           \"justify-content\": \"center\"\n//         }}\n//       >\n//         {this.state.selectedTarea ? (\n//           <h4>Modificá la tarea:</h4>\n//         ) : (\n//           <h4>Agregá una nueva tarea:</h4>\n//         )}\n\n//         <NewTareaForm\n//           formValues={this.state.form}\n//           onChange={this.handleChange}\n//           onSubmit={this.handleSubmit}\n//           selectedTarea={this.state.selectedTarea}\n//           unSelectTarea={this.unSelectTarea}\n//         />\n\n//         <div\n//           style={{\n//             display: \"flex\",\n//             \"margin-top\": \"40px\"\n//           }}\n//         >\n//           <div style={{ \"margin-right\": \"50px\" }}>\n//             <Seccion\n//               title=\"To do\"\n//               tareas={this.state.tareasToDo}\n//               color=\"#5191fd\"\n//               type={1}\n//               goToDoing={this.goToDoing}\n//               goToToDo={this.goToToDo}\n//               goToFinished={this.goToFinished}\n//               eliminarTarea={this.eliminarTarea}\n//               selectTarea={this.selectTarea}\n//             />\n//           </div>\n//           <div style={{ \"margin-right\": \"50px\" }}>\n//             <Seccion\n//               title=\"Doing\"\n//               tareas={this.state.tareasDoing}\n//               color=\"#e68a97\"\n//               type={2}\n//               goToDoing={this.goToDoing}\n//               goToToDo={this.goToToDo}\n//               goToFinished={this.goToFinished}\n//               eliminarTarea={this.eliminarTarea}\n//               selectTarea={this.selectTarea}\n//             />\n//           </div>\n//           <div style={{ \"margin-right\": \"50px\" }}>\n//             <Seccion\n//               title=\"Finished\"\n//               tareas={this.state.tareasFinished}\n//               color=\"#66a853\"\n//               type={3}\n//               goToDoing={this.goToDoing}\n//               goToToDo={this.goToToDo}\n//               goToFinished={this.goToFinished}\n//               eliminarTarea={this.eliminarTarea}\n//               selectTarea={this.selectTarea}\n//             />\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}